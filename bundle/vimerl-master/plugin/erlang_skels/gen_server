-module($MODULENAME).
-behaviour(gen_server).

%% gen_server callbacks
-export([init/1,
         handle_call/3,
         handle_cast/2,
         handle_info/2,
         terminate/2,
         code_change/3
        ]).

-record(state, {}).


%% Module Interface 
%-export([start_link/0
%%         start/0]).

%% @doc Starts the server
start_link() ->
    gen_server:start_link({local, ?MODULE}, ?MODULE, [], []).

%%start() ->
%%    gen_server:start({local, ?MODULE}, ?MODULE, [], []).

%%stop() ->
%%    gen_server:call(?MODULE, stop).
%%




%% @spec handle_cast(Msg, State) -> {noreply, State} |
init([]) ->
    {ok, #state{}}.

%% @spec handle_cast(Msg, State) -> {noreply, State} |
handle_call(_Request, _From, State) ->
    Reply = ok,
    {reply, Reply, State}.

%% @spec handle_cast(Msg, State) -> {noreply, State} |
%%                                  {noreply, State, Timeout} |
%%                                  {noreply, State, hibernate} |
%%                                  {stop, Reason, State}
handle_cast(_Msg, State) ->
    {noreply, State}.

handle_info(_Msg, State) ->
    {noreply, State}.

%% @spec terminate(Reason, State) -> no_return()
%%       Reason = normal | shutdown | {shutdown, term()} | term()
terminate(_Reason, _State) ->
    ok.

code_change(_OldVsn, State, _Extra) ->
    {ok, State}.



%%=======================================================================
%% Internal functions
%%=======================================================================
