*signify.txt*                                      Seeing changes like a boss.
*signify*

                                              ___
                    __                  __  /'___\
               ____/\_\     __     ___ /\_\/\ \__/  __  __
              /',__\/\ \  /'_ `\ /' _ `\/\ \ \ ,__\/\ \/\ \
             /\__, `\ \ \/\ \L\ \/\ \/\ \ \ \ \ \_/\ \ \_\ \
             \/\____/\ \_\ \____ \ \_\ \_\ \_\ \_\  \/`____ \
              \/___/  \/_/\/___L\ \/_/\/_/\/_/\/_/   `/___/> \
                            /\____/                     /\___/
                            \_/__/                      \/__/



                              Reference Manual


==============================================================================
CONTENTS                                                    *signify-contents*

    1.Intro..........................................|signify-intro|
    2.Usage..........................................|signify-usage|
    3.Options........................................|signify-options|
    4.Commands.......................................|signify-commands|
    4.Mappings.......................................|signify-mappings|
    5.Author.........................................|signify-author|
    6.Credits........................................|signify-credits|
    7.License........................................|signify-license|


==============================================================================
1. Intro                                                       *signify-intro*

Signify, or just sy for short, is an quite unobtrusive plugin. If there is
information about changes (in form of patch hunks) since the last commit, they
will be shown on the left side in Vim's sign column.

Easy-peasy!


==============================================================================
2. Usage                                                       *signify-usage*

The usage is pretty straight-forward. By default you should only notice a
difference, if you're working in a directory that is managed by a supported
version control system:

    - git
    - mercurial
    - darcs
    - bzr
    - subversion
    - cvs
    - rcs

The plugin defines 4 new kinds of signs and their corresponding highlighting
groups. It tries to inherent existing colors from the SignColumn group, if
that fails, it sets its own colors. In case you don't like these colors, you
can change them easily through variables.

Sign explanation:

    +

A new line was added. The sign is shown on the same line as the new line.

    _

A line was deleted. The sign is shown on the line above the deleted line.
Special case: The first line was deleted. In this case the sign is shown on
the same line.

    !

A line was changed. Something was changed, but the amount of lines stayed the
same. The sign is shown on the same line.

    !_

A line was changed and one or more of the lines below were deleted. A
combination of ! and _. The sign is shown on the same line.


==============================================================================
3. Options                                                   *signify-options*

Put these variables into your vimrc. The shown assignments are only examples,
not defaults.


    let g:signify_mapping_next_hunk = '<leader>gj'
    let g:signify_mapping_prev_hunk = '<leader>gk'

Mapping for jumping to the next or previous hunk.


    let g:signify_mapping_toggle_highlight = '<leader>gh'

Mapping for toggling line highlighting for lines containing changes.


    let g:signify_mapping_toggle = '<leader>gt'

Mapping for toggling the plugin for the current buffer only.


    let g:signify_exceptions_filetype = [ 'vim', 'c' ]
    let g:signify_exceptions_filename = [ '.vimrc' ]

Don't activate the plugin for these filetypes and/or filenames.


    let g:signify_sign_overwrite = 1

Overwrite signs set by other plugins by default.


    let g:signify_sign_add               = '+'
    let g:signify_sign_change            = '*'
    let g:signify_sign_change_delete     = '!_'
    let g:signify_sign_delete            = '-'
    let g:signify_sign_delete_first_line = 'â€¾'

The sign to use if a line was added, deleted or changed or a combination of
these.


    let g:signify_sign_color_guifg_add      = '#00ff00'
    let g:signify_sign_color_guifg_delete   = '#ff0000'
    let g:signify_sign_color_guifg_change   = '#ffff00'
    let g:signify_sign_color_guibg          = '#111111'

    let g:signify_sign_color_ctermfg_add    = 2
    let g:signify_sign_color_ctermfg_delete = 1
    let g:signify_sign_color_ctermfg_change = 3
    let g:signify_sign_color_ctermbg        = 0

The colors of your signs.


    let g:signify_sign_color_group_add    = 'MyAdd'
    let g:signify_sign_color_group_delete = 'MyDelete'
    let g:signify_sign_color_group_change = 'MyChange'

Link to another highlight group for setting sign colors. If this option is
set, any other sign color option for that change class will be ignored.

Example:
    is set:   g:signify_sign_color_group_delete
    ignored:  g:signify_sign_color_ctermfg_delete
    ignored:  g:signify_sign_color_guifg_delete


    let g:signify_line_color_add    = 'DiffAdd'
    let g:signify_line_color_delete = 'DiffDelete'
    let g:signify_line_color_change = 'DiffChange'

The highlight groups to use with line highlighting.


    let g:signify_sign_color_inherit_from_linenr = 1

Make signs use the same background color as LineNr.


    let g:signify_enable_cvs = 1

Enable CVS repo detection.


    let g:signify_cursorhold_normal = 1
    let g:signify_cursorhold_insert = 1

Additionally trigger sign updates in normal or insert mode after 'updatetime'
miliseconds without any keypresses. This fires only once between keypresses,
thus not every 'updatetime' miliseconds.

Important: This also saves the buffer to disk!


==============================================================================
4. Commands                                                 *signify-commands*
4. Mappings                                                 *signify-mappings*


    :SignifyToggle

Toggle the plugin for the current buffer only.
Default mapping:  <leader>gt


    :SignifyToggleHighlight

Toggle line highlighting for lines containing changes.
Default mapping:  <leader>gh


    :SignifyJumpToNextHunk

Jump to the next hunk.
Default mapping:  <leader>gn


    :SignifyJumpToPrevHunk

Jump to the previous hunk.  
Default mapping:  <leader>gp


==============================================================================
5. About the author                                           *signify-author*

My nick on Freenode IRC is mhi^.

For latest developments: https://github.com/mhinz

If you use any of my plugins, star it on github. This is a great way of
getting feedback! Same for issues or feature requests.

Thank you for flying mhi airlines. Get the Vim on!


==============================================================================
6. Credits                                                   *signify-credits*

People who contributed to sy. Format: Person (Github account)


Jeremy Mack     (mutewinter)
Chong Li        (chongli)
Robin Munn      (rmunn)


==============================================================================
7. Licence                                                   *signify-license*

Distributed under a 3-clause BSD license.


vim: tw=78
